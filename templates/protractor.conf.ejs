<%- jasmineReportExpression _%>
<% if(answers.framework === "cucumber" && answers.cucumberReportType === "html") { _%>
const reporter = require("cucumber-html-reporter");
<% } %>
exports.config = {
    
    allScriptsTimeout: 120000,
    <% if(seleniumServerJarExpression) { %>
    <%- seleniumServerJarExpression _%>
    <% } _%>
    <% if(seleniumAddressExpression) { %>
    <%- seleniumAddressExpression _%>
    <% } _%>
    <% if(answers.drivers) { %>
    directConnect: true,
    <% } _%>
    <% if(answers.backend.indexOf("cloud services") > -1) { %>
    <% if(answers.sauceUser && answers.sauceKey) { %>
    sauceUser: '<%=answers.sauceUser_%>',
    sauceKey: '<%=answers.sauceKey_%>',
    <% } else if(answers.browserstackUser && answers.browserstackKey) { %>
    browserstackUser: '<%=answers.browserstackUser_%>',
    browserstackKey: '<%=answers.browserstackKey_%>',
    <% } _%>
    <% } %>
    baseUrl: '<%= answers.baseURL _%>',
    capabilities: {
        browserName: '<%= answers.browser%>'
    },
    <% if(answers.framework === 'cucumber') { %>
    framework: 'custom',
    frameworkPath: require.resolve("protractor-cucumber-framework"),
    <% } else { _%>
    framework: '<%= answers.framework%>',
    <% } _%> 
    specs: [
        '<%= answers.specs %>'
    ],
    logLevel: '<%- logExpression _%>',
    <%_ if(answers.framework.match(/(jasmine|mocha)/) && answers.reportType === "json") { _%>
    resultJsonOutputFile: "<%= `${answers.reportPath}/`+'protractor_report.json' %>",
    <%_ } _%>
    <%_ if(beforeLaunchExpression) { _%>
    beforeLaunch: () => {
        <%- beforeLaunchExpression _%>
    },
    <%_ } _%>
    <%_ if(answers.framework === "jasmine") { _%>
    jasmineNodeOpts: {
        defaultTimeoutInterval: 120000,
        <% if(answers.reportType === "spec") { _%>
        print: () => {},
        <% } _%>
        showColors: true,
        random: false,
    },
    <%_ } _%>
    <%_ if(answers.framework === "mocha") { _%>
    mochaOpts: {
        bail: true,
        colors: true,
        compilers:<%- transpilerExpression %>, 
        reporter:<%- mochaReportExpression %>,
        timeout: 30000,
        ui: "bdd",
        },
        <%_ } _%>
    <%_ if(onPrepareExpression) { %>
    onPrepare: () => {
        <%- onPrepareExpression %>
    },
    <%_ } %>  
    <%_ if(answers.framework === "cucumber"){ %>
    cucumberOpts: {
        "compiler":<%- transpilerExpression %>,                                                  
        "dry-run": false,                                           
        "fail-fast": false,                                         
        "format":["<%- formatExpression _%>"],                                                           
        "require":["<%= answers.stepDefinitions _%>"],               
        "tags":"",                                                 

    },
    <% } _%>
    <% if(onCompleteExpression) { _%>
    onComplete: () => {
        <%- onCompleteExpression _%>
    }
    <% } _%>
};
/*
====================================================================
For full list of Protractor config options,
see- https://github.com/angular/protractor/blob/master/lib/config.ts
====================================================================
**/